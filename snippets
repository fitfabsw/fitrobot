
# =============================================================
# manually launch linorobot2
#
# default map: $WORKSPACE/fitrobot/maps/office_res002_0914.yaml
# =============================================================
ros2 launch linorobot2_bringup bringup.launch.py
ros2 launch fitrobot bringup.launch.py
ros2 launch linorobot2_navigation navigation.launch.py
or
ros2 launch linorobot2_navigation navigation_keepout.launch.py



# =============================================================
# manually launch artic
#
# default map: $WORKSPACE/fitrobot/maps/office_res002_0523.yaml
# =============================================================
ros2 launch articubot_one launch_robot.launch.py
ros2 launch fitrobot bringup.launch.py
ros2 launch articubot_one navigation.launch.py
or
ros2 launch articubot_one navigation_keepout.launch.py



# =============================================================
# fitrobot service
ros2 service call /master fitrobot_interfaces/srv/Master "{'request_action':'slam' , 'request_param':'' }"
ros2 service call /master fitrobot_interfaces/srv/Master "{'request_action':'navigation' , 'request_param':'MAP_YAML_FILE' }"
ros2 service call /master fitrobot_interfaces/srv/Master "{'request_action':'navigation' , 'request_param':'office_res002_0914.yaml' }"
ros2 service call /list_station fitrobot_interfaces/srv/ListStation  # Depends on master service(navigation)
ros2 service call /save_map fitrobot interfaces/srv/SaveMap "{'map_name':MAP_YAML_FILE}"
ros2 service call /list_map fitrobot_interfaces/srv/ListMap
ros2 service call /waypoint_follower fitrobot_interfaces/srv/WaypointFollower "{'station':{'type': 'station', 'name':' 站點1', 'x':0.5, 'y':0.0, 'z':0.0, 'w':1.0}}"
ros2 service call /is_localized std_srvs/srv/Trigger
ros2 service call /target_station fitrobot_interfaces/srv/TargetStation
ros2 service call /terminate_slam_or_navigation fitrobot_interfaces/srv/TerminateProcess
ros2 service call /cancel_nav fitrobot_interfaces/srv/CancelNav

# =============================================================
# Manually test waypoint follower service
ros2 run fitrobot master_service
ros2 service call /master fitrobot_interfaces/srv/Master "{'request_action':'navigation' , 'request_param':'lino2_office_20240129.yaml' }"
ros2 run fitrobotcpp check_robot_status
ros2 run fitrobot waypoint_follower
ros2 service call /waypoint_follower fitrobot_interfaces/srv/WaypointFollower "{'station':{'type': 'station', 'name':'Hank座位(站點)', 'x':1.7, 'y':3.0, 'z':0.0, 'w':1.0}}"
ros2 service call /waypoint_follower fitrobot_interfaces/srv/WaypointFollower "{'station':{'type': 'station', 'name':'健身房門口(站點)', 'x':0.5, 'y':5.0, 'z':0.0, 'w':1.0}}"
ros2 topic pub -1 /ok_to_go std_msgs/Empty
ros2 service call /cancel_nav fitrobot_interfaces/srv/CancelNav


# =============================================================
# simulations for quick testing manually
#
# default map: $WORKSPACE/zbot_lino/linorobot2/linorobot2_navigation/maps/turtlebot3_world.yaml
# =============================================================
ros2 launch linorobot2_gazebo gazebo.launch.py
ros2 launch linorobot2_navigation navigation.launch.py sim:=true rviz:=true
ros2 run fitrobot check_robot_status
ros2 run fitrobotcpp check_robot_status
# ros2 run fitrobot master_service
ros2 run fitrobot master_async_service
ros2 run fitrobot waypoint_follower
ros2 service call /waypoint_follower fitrobot_interfaces/srv/WaypointFollower "{'station':{'type': 'station', 'name':' 站點1', 'x':0.5, 'y':1.5, 'z':0.707, 'w':0.707}}"
ros2 run fitrobotcpp nav2_action_client



# =============================================================
# simulations with fitrobot services
#
# default map: $WORKSPACE/zbot_lino/linorobot2/linorobot2_navigation/maps/turtlebot3_world.yaml
# =============================================================
ros2 launch linorobot2_gazebo gazebo.launch.py
USE_SIM=1 ros2 launch fitrobot bringup.launch.py
ros2 service call /master fitrobot_interfaces/srv/Master "{'request_action':'navigation' , 'request_param':'turtlebot3_world.yaml' }"
ros2 service call /master fitrobot_interfaces/srv/Master "{'request_action':'slam' , 'request_param':'' }"
ros2 service call /terminate_slam_or_navigation fitrobot_interfaces/srv/TerminateProcess
ros2 param get /check_robot_status_node fitrobot_status



# fitrobot topic
ros2 topic echo /target_station
ros2 topic pub -1 /ok_to_go std_msgs/msg/Empty
ros2 topic pub -1 /led_status std_msgs/msg/Int32 "{data: 1}"


# debug
sudo journalctl -u fitrobot_lino.bringup.service -f -n 1000
tail -f /tmp/master_service_nav_log.txt -n 1000
tail -f /tmp/master_service_slam_log.txt -n 1000
