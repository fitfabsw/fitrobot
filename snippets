
# =============================================================
# manually launch linorobot2
#
# default map: $WORKSPACE/fitrobot/maps/office_res002_0914.yaml
# =============================================================
ros2 launch linorobot2_bringup bringup.launch.py
ros2 launch fitrobot bringup.launch.py
ros2 launch linorobot2_navigation navigation.launch.py
or
ros2 launch linorobot2_navigation navigation_keepout.launch.py



# =============================================================
# manually launch artic
#
# default map: $WORKSPACE/fitrobot/maps/office_res002_0523.yaml
# =============================================================
ros2 launch articubot_one launch_robot.launch.py
ros2 launch fitrobot bringup.launch.py
ros2 launch articubot_one navigation.launch.py
or
ros2 launch articubot_one navigation_keepout.launch.py



# =============================================================
# fitrobot service
ros2 service call /master fitrobot_interfaces/srv/Master "{'request_action':'slam' , 'request_param':'' }"
ros2 service call /master fitrobot_interfaces/srv/Master "{'request_action':'navigation' , 'request_param':'MAP_YAML_FILE' }"
ros2 service call /master fitrobot_interfaces/srv/Master "{'request_action':'navigation' , 'request_param':'office_res002_0914.yaml' }"
ros2 service call /list_station fitrobot_interfaces/srv/ListStation  # Depends on master service(navigation)
ros2 service call /save_map fitrobot interfaces/srv/SaveMap "{'map_name':MAP_YAML_FILE}"
ros2 service call /list_map fitrobot_interfaces/srv/ListMap
ros2 service call /waypoint_follower fitrobot_interfaces/srv/WaypointFollower "{'station':{'type': 'station', 'name':' 站點1', 'x':0.5, 'y':0.0, 'z':0.0, 'w':1.0}}"
ros2 service call /is_localized std_srvs/srv/Trigger
ros2 service call /target_station fitrobot_interfaces/srv/TargetStation


# simulations for quick testing
ros2 launch linorobot2_gazebo gazebo.launch.py # default world: turtlebot3_world
ros2 launch linorobot2_navigation navigation.launch.py sim:=true rviz:=true
ros2 run fitrobot master_service
ros2 run fitrobot waypoint_follower
ros2 service call /waypoint_follower fitrobot_interfaces/srv/WaypointFollower "{'station':{'type': 'station', 'name':' 站點1', 'x':-2.0, 'y':0.0, 'z':0.707, 'w':0.707}}"
ros2 run fitrobot check_robot_status
